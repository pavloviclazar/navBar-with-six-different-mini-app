{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/red/src/components/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { GoChevronDown } from 'react-icons/go';\nimport Panel from './Panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dropdown(_ref) {\n  _s();\n\n  let {\n    options,\n    value,\n    onChange\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const divEl = useRef();\n  useEffect(() => {\n    const handler = event => {\n      if (!divEl.current) {\n        return;\n      }\n\n      if (!divEl.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handler, true);\n    return () => {\n      document.removeEventListener('click', handler);\n    };\n  }, []);\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = option => {\n    setIsOpen(false);\n    onChange(option);\n  };\n\n  const renderedOptions = options.map(option => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hover:bg-sky-100 rounded cursor-pointer p-1\",\n      onClick: () => handleOptionClick(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: divEl,\n    className: \"w-48 relative\",\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      className: \"flex justify-between items-center cursor-pointer\",\n      onClick: handleClick,\n      children: [(value === null || value === void 0 ? void 0 : value.label) || 'Select...', /*#__PURE__*/_jsxDEV(GoChevronDown, {\n        className: \"text-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Panel, {\n      className: \"absolute top-full\",\n      children: renderedOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropdown, \"vOq9QTgDS0u9AJtv1ufd9s5HWrI=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","useEffect","useRef","GoChevronDown","Panel","Dropdown","options","value","onChange","isOpen","setIsOpen","divEl","handler","event","current","contains","target","document","addEventListener","removeEventListener","handleClick","handleOptionClick","option","renderedOptions","map","label"],"sources":["/Users/mac/Documents/red/src/components/Dropdown.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { GoChevronDown } from 'react-icons/go';\nimport Panel from './Panel';\n\nfunction Dropdown({ options, value, onChange }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const divEl = useRef();\n\n  useEffect(() => {\n    const handler = (event) => {\n      if (!divEl.current) {\n        return;\n      }\n\n      if (!divEl.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handler, true);\n\n    return () => {\n      document.removeEventListener('click', handler);\n    };\n  }, []);\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = (option) => {\n    setIsOpen(false);\n    onChange(option);\n  };\n\n  const renderedOptions = options.map((option) => {\n    return (\n      <div\n        className=\"hover:bg-sky-100 rounded cursor-pointer p-1\"\n        onClick={() => handleOptionClick(option)}\n        key={option.value}\n      >\n        {option.label}\n      </div>\n    );\n  });\n\n  return (\n    <div ref={divEl} className=\"w-48 relative\">\n      <Panel\n        className=\"flex justify-between items-center cursor-pointer\"\n        onClick={handleClick}\n      >\n        {value?.label || 'Select...'}\n        <GoChevronDown className=\"text-lg\" />\n      </Panel>\n      {isOpen && <Panel className=\"absolute top-full\">{renderedOptions}</Panel>}\n    </div>\n  );\n}\n\nexport default Dropdown;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,QAAT,OAAgD;EAAA;;EAAA,IAA9B;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,CAA8B;EAC9C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;EACA,MAAMW,KAAK,GAAGT,MAAM,EAApB;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAIC,KAAD,IAAW;MACzB,IAAI,CAACF,KAAK,CAACG,OAAX,EAAoB;QAClB;MACD;;MAED,IAAI,CAACH,KAAK,CAACG,OAAN,CAAcC,QAAd,CAAuBF,KAAK,CAACG,MAA7B,CAAL,EAA2C;QACzCN,SAAS,CAAC,KAAD,CAAT;MACD;IACF,CARD;;IAUAO,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,OAAnC,EAA4C,IAA5C;IAEA,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,OAAtC;IACD,CAFD;EAGD,CAhBQ,EAgBN,EAhBM,CAAT;;EAkBA,MAAMQ,WAAW,GAAG,MAAM;IACxBV,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CAFD;;EAIA,MAAMY,iBAAiB,GAAIC,MAAD,IAAY;IACpCZ,SAAS,CAAC,KAAD,CAAT;IACAF,QAAQ,CAACc,MAAD,CAAR;EACD,CAHD;;EAKA,MAAMC,eAAe,GAAGjB,OAAO,CAACkB,GAAR,CAAaF,MAAD,IAAY;IAC9C,oBACE;MACE,SAAS,EAAC,6CADZ;MAEE,OAAO,EAAE,MAAMD,iBAAiB,CAACC,MAAD,CAFlC;MAAA,UAKGA,MAAM,CAACG;IALV,GAGOH,MAAM,CAACf,KAHd;MAAA;MAAA;MAAA;IAAA,QADF;EASD,CAVuB,CAAxB;EAYA,oBACE;IAAK,GAAG,EAAEI,KAAV;IAAiB,SAAS,EAAC,eAA3B;IAAA,wBACE,QAAC,KAAD;MACE,SAAS,EAAC,kDADZ;MAEE,OAAO,EAAES,WAFX;MAAA,WAIG,CAAAb,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEkB,KAAP,KAAgB,WAJnB,eAKE,QAAC,aAAD;QAAe,SAAS,EAAC;MAAzB;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAQGhB,MAAM,iBAAI,QAAC,KAAD;MAAO,SAAS,EAAC,mBAAjB;MAAA,UAAsCc;IAAtC;MAAA;MAAA;MAAA;IAAA,QARb;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAvDQlB,Q;;KAAAA,Q;AAyDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}